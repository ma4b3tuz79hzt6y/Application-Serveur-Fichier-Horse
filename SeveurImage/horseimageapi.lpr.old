program horseimageapi;

{$MODE DELPHI}{$H+}

uses
  {$IFDEF UNIX} cthreads, {$IFDEF UseCThreads}

  {$ENDIF}{$ENDIF}
  Horse,
  Horse.OctetStream, // It's necessary to use the unit
  SysUtils,
  Classes;

procedure GetStream(Req: THorseRequest; Res: THorseResponse);
var
  LStream: TFileStream;
  fichier : string;
  chemin : string;
begin
  //get http://192.168.1.149:9001/stream/tesoura.png
  // Now you can send your stream:
  fichier:=req.Params['fichier'];
  chemin := ExtractFilePath(ExtractFilePath(ParamStr(0))) + 'ImageBarber/Images/' +fichier;
  if FileExists(chemin) then
  LStream := TFileStream.Create(chemin, fmOpenRead)
  else
  LStream := TFileStream.Create(ExtractFilePath(ParamStr(0)) + 'ImageBarber/Images/about.svg', fmOpenRead);

  Res.Send<TStream>(LStream).ContentType('application/octet-stream');
end;

procedure PostStream(Req: THorseRequest; Res: THorseResponse);
var
  LType: string;
  fichier : string;
  chemin : string;
begin
  fichier:=req.Params['fichier'];
  if NOT Req.Body.IsEmpty then
  begin
  chemin := ExtractFilePath(ExtractFilePath(ParamStr(0))) + 'ImageBarber/Images/' +fichier;

  Req.Body<TBytesStream>.SaveToFile(chemin);
  end;
  //post http://192.168.1.149:9001/stream/tesoura.png
  // here you could get the Req.ContentType and save the file based on that
  //LType := Copy(Req.RawWebRequest.ContentType, Pos('/', Req.RawWebRequest.ContentType) + 1, Req.RawWebRequest.ContentType.Length);

  //Req.Body<TBytesStream>.SaveToFile(ExtractFilePath(ParamStr(0)) +fichier );//
  // Req.Body<TBytesStream>.SaveToFile(chemin);//
  Res.Status(THTTPStatus.NoContent);
end;

begin
  // It's necessary to add the middleware in the Horse:
  THorse.Use(OctetStream);

 // THorseOctetStreamConfig.GetInstance.AcceptContentType.Add('application/pdf');
  THorseOctetStreamConfig.GetInstance.AcceptContentType.Add('application/octet-stream');

  THorse.Get('/stream/:fichier', GetStream);
  THorse.Post('/stream/:fichier', PostStream);
  THorse.Listen(9001);
end.
     
